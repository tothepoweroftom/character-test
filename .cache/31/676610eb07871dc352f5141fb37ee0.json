{"id":"nIcn","dependencies":[{"name":"/Users/tom/Documents/GitHub/fabricating-alternatives-004/node_modules/sentence-splitter/lib/parser/AnyValueParser.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/tom/Documents/GitHub/fabricating-alternatives-004/node_modules/sentence-splitter/src/parser/AnyValueParser.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/tom/Documents/GitHub/fabricating-alternatives-004/package.json","includedInParent":true,"mtime":1563189193141},{"name":"/Users/tom/Documents/GitHub/fabricating-alternatives-004/node_modules/sentence-splitter/package.json","includedInParent":true,"mtime":1563190777718}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var r=function(){function r(r){this.parsers=r.parsers,this.markers=r.markers}return r.prototype.test=function(r){return!r.hasEnd&&this.parsers.every(function(e){return!e.test(r)})},r.prototype.seek=function(r){var e=r.readNode();if(e)for(var t;t=void 0,t=r.offset,e.range[0]<=t&&t<e.range[1]&&this.test(r);)this.markers.forEach(function(e){return e.mark(r)}),r.peek();else for(;this.test(r);)this.markers.forEach(function(e){return e.mark(r)}),r.peek()},r}();exports.AnyValueParser=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":68}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":72}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":74}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":1,"column":85}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":1,"column":94}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":1,"column":96}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":21,"column":8},"generated":{"line":1,"column":99}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":104}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":1,"column":112}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":21,"column":31},"generated":{"line":1,"column":114}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":22,"column":8},"generated":{"line":1,"column":122}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":1,"column":127}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":22,"column":23},"generated":{"line":1,"column":135}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":22,"column":31},"generated":{"line":1,"column":137}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":1,"column":145}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":1,"column":152}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":1,"column":154}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":1,"column":164}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":1,"column":169}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":1,"column":178}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":1,"column":181}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":26,"column":12},"generated":{"line":1,"column":188}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":26,"column":23},"generated":{"line":1,"column":190}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":29,"column":15},"generated":{"line":1,"column":198}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":29,"column":20},"generated":{"line":1,"column":203}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":29,"column":28},"generated":{"line":1,"column":211}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":29,"column":34},"generated":{"line":1,"column":217}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":29,"column":34},"generated":{"line":1,"column":226}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":29,"column":44},"generated":{"line":1,"column":229}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":29,"column":45},"generated":{"line":1,"column":236}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":29,"column":52},"generated":{"line":1,"column":238}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":29,"column":57},"generated":{"line":1,"column":243}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":249}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":251}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":261}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":266}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":1,"column":275}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":1,"column":278}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":33,"column":14},"generated":{"line":1,"column":282}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":33,"column":28},"generated":{"line":1,"column":284}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":33,"column":39},"generated":{"line":1,"column":286}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":1,"column":297}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":34,"column":13},"generated":{"line":1,"column":300}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":1,"column":302}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":43,"column":8},"generated":{"line":1,"column":306}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":44,"column":18},"generated":{"line":1,"column":310}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":44,"column":18},"generated":{"line":1,"column":312}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":44,"column":18},"generated":{"line":1,"column":319}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":44,"column":18},"generated":{"line":1,"column":321}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":44,"column":34},"generated":{"line":1,"column":323}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":44,"column":45},"generated":{"line":1,"column":325}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":45,"column":19},"generated":{"line":1,"column":332}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":45,"column":31},"generated":{"line":1,"column":334}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":45,"column":37},"generated":{"line":1,"column":340}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":45,"column":43},"generated":{"line":1,"column":344}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":45,"column":60},"generated":{"line":1,"column":347}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":45,"column":76},"generated":{"line":1,"column":349}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":45,"column":88},"generated":{"line":1,"column":351}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":45,"column":94},"generated":{"line":1,"column":357}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":1,"column":361}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":47,"column":41},"generated":{"line":1,"column":366}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":47,"column":46},"generated":{"line":1,"column":371}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":48,"column":12},"generated":{"line":1,"column":375}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":48,"column":17},"generated":{"line":1,"column":380}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":48,"column":25},"generated":{"line":1,"column":388}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":48,"column":33},"generated":{"line":1,"column":396}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":48,"column":33},"generated":{"line":1,"column":405}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":48,"column":43},"generated":{"line":1,"column":408}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":48,"column":43},"generated":{"line":1,"column":415}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":48,"column":50},"generated":{"line":1,"column":417}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":48,"column":55},"generated":{"line":1,"column":422}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":49,"column":12},"generated":{"line":1,"column":427}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":49,"column":23},"generated":{"line":1,"column":429}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":36,"column":12},"generated":{"line":1,"column":441}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":1,"column":446}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":1,"column":451}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":36,"column":29},"generated":{"line":1,"column":456}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":37,"column":16},"generated":{"line":1,"column":460}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":37,"column":21},"generated":{"line":1,"column":465}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":37,"column":29},"generated":{"line":1,"column":473}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":37,"column":37},"generated":{"line":1,"column":481}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":37,"column":37},"generated":{"line":1,"column":490}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":37,"column":47},"generated":{"line":1,"column":493}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":37,"column":47},"generated":{"line":1,"column":500}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":37,"column":54},"generated":{"line":1,"column":502}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":37,"column":59},"generated":{"line":1,"column":507}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":38,"column":16},"generated":{"line":1,"column":512}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":38,"column":27},"generated":{"line":1,"column":514}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":1,"column":522}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":1,"column":524}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":1,"column":527}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":1,"column":535}},{"source":"../../src/parser/AnyValueParser.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":1,"column":550}}],"sources":{"../../src/parser/AnyValueParser.ts":"import { SourceCode } from \"./SourceCode\";\nimport { AbstractParser } from \"./AbstractParser\";\nimport { AbstractMarker } from \"./AbstractMarker\";\n\nexport interface AnyValueParserOptions {\n    parsers: AbstractParser[];\n    markers: AbstractMarker[];\n}\n\n/**\n * Any value without `parsers`\n */\nexport class AnyValueParser implements AbstractParser {\n    private parsers: AbstractParser[];\n    private markers: AbstractMarker[];\n\n    /**\n     * Eat any value without `parsers.test`\n     */\n    constructor(options: AnyValueParserOptions) {\n        this.parsers = options.parsers;\n        this.markers = options.markers;\n    }\n\n    test(sourceCode: SourceCode) {\n        if (sourceCode.hasEnd) {\n            return false;\n        }\n        return this.parsers.every(parser => !parser.test(sourceCode));\n    }\n\n    seek(sourceCode: SourceCode) {\n        const currentNode = sourceCode.readNode();\n        if (!currentNode) {\n            // Text mode\n            while (this.test(sourceCode)) {\n                this.markers.forEach(marker => marker.mark(sourceCode));\n                sourceCode.peek();\n            }\n            return;\n        }\n        // node - should not over next node\n        const isInCurrentNode = () => {\n            const currentOffset = sourceCode.offset;\n            return currentNode.range[0] <= currentOffset && currentOffset < currentNode.range[1];\n        };\n        while (isInCurrentNode() && this.test(sourceCode)) {\n            this.markers.forEach(marker => marker.mark(sourceCode));\n            sourceCode.peek();\n        }\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"6ca540f9dc3448bacb55f6abd92470a0","cacheData":{"env":{}}}